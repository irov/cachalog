PROJECT(ch_grid C)

ADD_FILTER(
src
    main.c
    
    ch_config.h
    ch_attribute.h
    ch_tag.h
    ch_record.h
    ch_message.h
    ch_service.h
    ch_service.c
    
    ch_grid_request_insert.c
    ch_grid_request_select.c
)

INCLUDE_DIRECTORIES(${CACHALOT_DEPENDENCIES_SOURCE_DIRECTORY}/hummingbird/src)

INCLUDE_DIRECTORIES(${CACHALOT_CONFIGURATION_DIRECTORY}/libevent/include)
INCLUDE_DIRECTORIES(${CACHALOT_DEPENDENCIES_SOURCE_DIRECTORY}/libevent/include)

IF(CACHALOT_TARGET_OSX)
    ADD_EXECUTABLE(${PROJECT_NAME} MACOSX_BUNDLE ${CACHALOT_SOURCE_FILES})
ELSEIF(CACHALOT_TARGET_WIN32)
    ADD_EXECUTABLE(${PROJECT_NAME} WIN32 ${CACHALOT_SOURCE_FILES})
ELSEIF(CACHALOT_TARGET_UNIX)
    ADD_EXECUTABLE(${PROJECT_NAME} ${CACHALOT_SOURCE_FILES})
ENDIF()

TARGET_LINK_LIBRARIES(${PROJECT_NAME} hb_http)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} hb_json)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} hb_log)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} hb_log_tcp)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} hb_log_file)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} hb_log_stderr)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} hb_memory)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} hb_mutex)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} hb_pool)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} hb_thread)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} hb_utils)

TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${CACHALOT_DEPENDENCIES_LIBRARY_DIRECTORY}/${CMAKE_STATIC_LIBRARY_PREFIX}event${CMAKE_STATIC_LIBRARY_SUFFIX})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${CACHALOT_DEPENDENCIES_LIBRARY_DIRECTORY}/${CMAKE_STATIC_LIBRARY_PREFIX}json${CMAKE_STATIC_LIBRARY_SUFFIX})

IF(CACHALOT_TARGET_WIN32)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} Ws2_32.lib)
    
    IF(MSVC)
        TARGET_LINK_LIBRARIES(${PROJECT_NAME} Iphlpapi.lib)
    ENDIF()
ELSEIF(CACHALOT_TARGET_UNIX)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} resolv)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} rt)
    
    set(THREADS_PREFER_PTHREAD_FLAG ON)
    find_package(Threads REQUIRED)
    
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} Threads::Threads)
endif()

