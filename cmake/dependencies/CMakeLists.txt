CMAKE_MINIMUM_REQUIRED(VERSION 3.5)

OPTION(CACHALOT_DEPENDENCE_OPENSSL "CACHALOT_DEPENDENCE_OPENSSL" ON)
OPTION(CACHALOT_DEPENDENCE_LIBEVENT "CACHALOT_DEPENDENCE_LIBEVENT" ON)
OPTION(CACHALOT_DEPENDENCE_JSON "CACHALOT_DEPENDENCE_JSON" ON)

PROJECT(dependencies)

SET(CACHALOT_BUILD_TYPE_DEBUG OFF)
SET(CACHALOT_BUILD_TYPE_RELWITHDEBINFO OFF)
SET(CACHALOT_BUILD_TYPE_RELEASE OFF)

IF(CMAKE_BUILD_TYPE MATCHES "Debug")
    SET(CACHALOT_BUILD_TYPE_DEBUG ON)
ELSEIF(CMAKE_BUILD_TYPE MATCHES "RelWithDebInfo")
    SET(CACHALOT_BUILD_TYPE_RELWITHDEBINFO ON)
ELSEIF(CMAKE_BUILD_TYPE MATCHES "Release")
    SET(CACHALOT_BUILD_TYPE_RELEASE ON)
ELSE()
    MESSAGE(FATAL_ERROR "Non support build type: ${CMAKE_BUILD_TYPE}")
ENDIF()

if(CACHALOT_DEPENDENCE_OPENSSL)
    message("================openssl================")
    
    set(WITH_APPS OFF CACHE BOOL "WITH_APPS" FORCE)
    set(MSVC_DYNAMIC_RUNTIME OFF CACHE BOOL "MSVC_DYNAMIC_RUNTIME" FORCE)
    
    ADD_SUBDIRECTORY(${CACHALOT_DEPENDENCIES_SOURCE_DIRECTORY}/openssl ${CACHALOT_CONFIGURATION_DIRECTORY}/openssl)
    
    set(OPENSSL_ROOT_DIR ${CACHALOT_DEPENDENCIES_SOURCE_DIRECTORY}/openssl CACHE STRING "OPENSSL_ROOT_DIR" FORCE)
    set(OPENSSL_SSL_LIBRARIES ${CACHALOT_DEPENDENCIES_LIBRARY_DIRECTORY} CACHE STRING "OPENSSL_SSL_LIBRARIES" FORCE)
    set(OPENSSL_SSL_LIBRARY ${OPENSSL_SSL_LIBRARIES} CACHE STRING "OPENSSL_SSL_LIBRARY" FORCE)
    set(OPENSSL_CRYPTO_LIBRARIES ${CACHALOT_DEPENDENCIES_LIBRARY_DIRECTORY} CACHE STRING "OPENSSL_CRYPTO_LIBRARIES" FORCE)
    set(OPENSSL_CRYPTO_LIBRARY ${OPENSSL_CRYPTO_LIBRARIES} CACHE STRING "OPENSSL_CRYPTO_LIBRARY" FORCE)
    set(OPENSSL_LIBDIR ${CACHALOT_DEPENDENCIES_LIBRARY_DIRECTORY} CACHE STRING "OPENSSL_LIBDIR" FORCE)
    set(OPENSSL_LIBRARIES libssl.a libcrypto.a CACHE STRING "OPENSSL_LIBRARIES" FORCE)
    set(OPENSSL_INCLUDE_DIRS ${CACHALOT_CONFIGURATION_DIRECTORY}/openssl/include ${CACHALOT_DEPENDENCIES_SOURCE_DIRECTORY}/openssl/include CACHE STRING "OPENSSL_INCLUDE_DIRS" FORCE)
    set(OPENSSL_INCLUDE_DIR ${OPENSSL_INCLUDE_DIRS} CACHE STRING "OPENSSL_INCLUDE_DIR" FORCE)
    set(OPENSSL_USE_STATIC_LIBS ON CACHE BOOL "OPENSSL_USE_STATIC_LIBS" FORCE)
    
    message("OPENSSL_ROOT_DIR: ${OPENSSL_ROOT_DIR}")
    message("OPENSSL_SSL_LIBRARIES: ${OPENSSL_SSL_LIBRARIES}")
    message("OPENSSL_CRYPTO_LIBRARIES: ${OPENSSL_CRYPTO_LIBRARIES}")
    message("OPENSSL_LIBDIR: ${OPENSSL_LIBDIR}")
    message("OPENSSL_LIBRARIES: ${OPENSSL_LIBRARIES}")
    message("OPENSSL_INCLUDE_DIRS: ${OPENSSL_INCLUDE_DIRS}")
    message("OPENSSL_USE_STATIC_LIBS: ${OPENSSL_USE_STATIC_LIBS}")
endif()

#dependencies json
if(CACHALOT_DEPENDENCE_JSON)
    message("================json================")

    ADD_SUBDIRECTORY(${CACHALOT_DEPENDENCIES_SOURCE_DIRECTORY}/json ${CACHALOT_CONFIGURATION_DIRECTORY}/json)
endif()

#dependencies libevent
if(CACHALOT_DEPENDENCE_LIBEVENT)
    message("================libevent================")
    
    SET(EVENT__LIBRARY_TYPE STATIC CACHE STRING "EVENT__LIBRARY_TYPE" FORCE)
    
    if(CACHALOT_BUILD_TYPE_DEBUG)
        SET(EVENT__DISABLE_DEBUG_MODE OFF CACHE BOOL "EVENT__DISABLE_OPENSSL" FORCE)
    else()
        SET(EVENT__DISABLE_DEBUG_MODE ON CACHE BOOL "EVENT__DISABLE_OPENSSL" FORCE)
    endif()
    
    SET(EVENT__DISABLE_OPENSSL ON CACHE BOOL "EVENT__DISABLE_OPENSSL" FORCE)
    SET(EVENT__DISABLE_BENCHMARK ON CACHE BOOL "EVENT__DISABLE_BENCHMARK" FORCE)
    SET(EVENT__DISABLE_TESTS ON CACHE BOOL "EVENT__DISABLE_TESTS" FORCE)
    SET(EVENT__DISABLE_REGRESS ON CACHE BOOL "EVENT__DISABLE_REGRESS" FORCE)
    SET(EVENT__DISABLE_SAMPLES ON CACHE BOOL "EVENT__DISABLE_SAMPLES" FORCE)

    ADD_SUBDIRECTORY(${CACHALOT_DEPENDENCIES_SOURCE_DIRECTORY}/libevent ${CACHALOT_CONFIGURATION_DIRECTORY}/libevent)
endif()